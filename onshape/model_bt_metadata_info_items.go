/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMetadataInfoItems Individual element description
type BTMetadataInfoItems struct {
	ElementId *string `json:"elementId,omitempty"`
	// Possible values: 0=PARTSTUDIO,1=ASSEMBLY,2=DRAWING,3=FEATURESTUDIO,4=BLOB,5=APPLICATION,6=TABLE,7=BILLOFMATERIALS
	ElementType *int32 `json:"elementType,omitempty"`
	MimeType *string `json:"mimeType,omitempty"`
	Href *string `json:"href,omitempty"`
	Properties *[]BTMetadataItemsProperties `json:"@properties,omitempty"`
	Parts *[]BTMetadataParts `json:"parts,omitempty"`
}

// NewBTMetadataInfoItems instantiates a new BTMetadataInfoItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMetadataInfoItems() *BTMetadataInfoItems {
	this := BTMetadataInfoItems{}
	return &this
}

// NewBTMetadataInfoItemsWithDefaults instantiates a new BTMetadataInfoItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMetadataInfoItemsWithDefaults() *BTMetadataInfoItems {
	this := BTMetadataInfoItems{}
	return &this
}

// GetElementId returns the ElementId field value if set, zero value otherwise.
func (o *BTMetadataInfoItems) GetElementId() string {
	if o == nil || o.ElementId == nil {
		var ret string
		return ret
	}
	return *o.ElementId
}

// GetElementIdOk returns a tuple with the ElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataInfoItems) GetElementIdOk() (*string, bool) {
	if o == nil || o.ElementId == nil {
		return nil, false
	}
	return o.ElementId, true
}

// HasElementId returns a boolean if a field has been set.
func (o *BTMetadataInfoItems) HasElementId() bool {
	if o != nil && o.ElementId != nil {
		return true
	}

	return false
}

// SetElementId gets a reference to the given string and assigns it to the ElementId field.
func (o *BTMetadataInfoItems) SetElementId(v string) {
	o.ElementId = &v
}

// GetElementType returns the ElementType field value if set, zero value otherwise.
func (o *BTMetadataInfoItems) GetElementType() int32 {
	if o == nil || o.ElementType == nil {
		var ret int32
		return ret
	}
	return *o.ElementType
}

// GetElementTypeOk returns a tuple with the ElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataInfoItems) GetElementTypeOk() (*int32, bool) {
	if o == nil || o.ElementType == nil {
		return nil, false
	}
	return o.ElementType, true
}

// HasElementType returns a boolean if a field has been set.
func (o *BTMetadataInfoItems) HasElementType() bool {
	if o != nil && o.ElementType != nil {
		return true
	}

	return false
}

// SetElementType gets a reference to the given int32 and assigns it to the ElementType field.
func (o *BTMetadataInfoItems) SetElementType(v int32) {
	o.ElementType = &v
}

// GetMimeType returns the MimeType field value if set, zero value otherwise.
func (o *BTMetadataInfoItems) GetMimeType() string {
	if o == nil || o.MimeType == nil {
		var ret string
		return ret
	}
	return *o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataInfoItems) GetMimeTypeOk() (*string, bool) {
	if o == nil || o.MimeType == nil {
		return nil, false
	}
	return o.MimeType, true
}

// HasMimeType returns a boolean if a field has been set.
func (o *BTMetadataInfoItems) HasMimeType() bool {
	if o != nil && o.MimeType != nil {
		return true
	}

	return false
}

// SetMimeType gets a reference to the given string and assigns it to the MimeType field.
func (o *BTMetadataInfoItems) SetMimeType(v string) {
	o.MimeType = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTMetadataInfoItems) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataInfoItems) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTMetadataInfoItems) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTMetadataInfoItems) SetHref(v string) {
	o.Href = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *BTMetadataInfoItems) GetProperties() []BTMetadataItemsProperties {
	if o == nil || o.Properties == nil {
		var ret []BTMetadataItemsProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataInfoItems) GetPropertiesOk() (*[]BTMetadataItemsProperties, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *BTMetadataInfoItems) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []BTMetadataItemsProperties and assigns it to the Properties field.
func (o *BTMetadataInfoItems) SetProperties(v []BTMetadataItemsProperties) {
	o.Properties = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *BTMetadataInfoItems) GetParts() []BTMetadataParts {
	if o == nil || o.Parts == nil {
		var ret []BTMetadataParts
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataInfoItems) GetPartsOk() (*[]BTMetadataParts, bool) {
	if o == nil || o.Parts == nil {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *BTMetadataInfoItems) HasParts() bool {
	if o != nil && o.Parts != nil {
		return true
	}

	return false
}

// SetParts gets a reference to the given []BTMetadataParts and assigns it to the Parts field.
func (o *BTMetadataInfoItems) SetParts(v []BTMetadataParts) {
	o.Parts = &v
}

func (o BTMetadataInfoItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ElementId != nil {
		toSerialize["elementId"] = o.ElementId
	}
	if o.ElementType != nil {
		toSerialize["elementType"] = o.ElementType
	}
	if o.MimeType != nil {
		toSerialize["mimeType"] = o.MimeType
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Properties != nil {
		toSerialize["@properties"] = o.Properties
	}
	if o.Parts != nil {
		toSerialize["parts"] = o.Parts
	}
	return json.Marshal(toSerialize)
}

type NullableBTMetadataInfoItems struct {
	value *BTMetadataInfoItems
	isSet bool
}

func (v NullableBTMetadataInfoItems) Get() *BTMetadataInfoItems {
	return v.value
}

func (v *NullableBTMetadataInfoItems) Set(val *BTMetadataInfoItems) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMetadataInfoItems) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMetadataInfoItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMetadataInfoItems(val *BTMetadataInfoItems) *NullableBTMetadataInfoItems {
	return &NullableBTMetadataInfoItems{value: val, isSet: true}
}

func (v NullableBTMetadataInfoItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMetadataInfoItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
