/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMetadataCommonString struct for BTMetadataCommonString
type BTMetadataCommonString struct {
	DefaultValue *string `json:"defaultValue,omitempty"`
	Dirty *bool `json:"dirty,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	EditableInUi *bool `json:"editableInUi,omitempty"`
	InitialValue *map[string]interface{} `json:"initialValue,omitempty"`
	IsApproverProperty *bool `json:"isApproverProperty,omitempty"`
	IsNotifierProperty *bool `json:"isNotifierProperty,omitempty"`
	Multivalued *bool `json:"multivalued,omitempty"`
	Name *string `json:"name,omitempty"`
	PropertyId *string `json:"propertyId,omitempty"`
	PropertySource *int32 `json:"propertySource,omitempty"`
	Required *bool `json:"required,omitempty"`
	SchemaId *string `json:"schemaId,omitempty"`
	UiHints *BTMetadataPropertyUiHintsInfo `json:"uiHints,omitempty"`
	Validator *BTMetadataPropertyValidatorInfo `json:"validator,omitempty"`
	Value *string `json:"value,omitempty"`
	ValueType string `json:"valueType"`
}

// NewBTMetadataCommonString instantiates a new BTMetadataCommonString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMetadataCommonString(valueType string, ) *BTMetadataCommonString {
	this := BTMetadataCommonString{}
	this.ValueType = valueType
	return &this
}

// NewBTMetadataCommonStringWithDefaults instantiates a new BTMetadataCommonString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMetadataCommonStringWithDefaults() *BTMetadataCommonString {
	this := BTMetadataCommonString{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetDefaultValue() string {
	if o == nil || o.DefaultValue == nil {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetDefaultValueOk() (*string, bool) {
	if o == nil || o.DefaultValue == nil {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasDefaultValue() bool {
	if o != nil && o.DefaultValue != nil {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *BTMetadataCommonString) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetDirty returns the Dirty field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetDirty() bool {
	if o == nil || o.Dirty == nil {
		var ret bool
		return ret
	}
	return *o.Dirty
}

// GetDirtyOk returns a tuple with the Dirty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetDirtyOk() (*bool, bool) {
	if o == nil || o.Dirty == nil {
		return nil, false
	}
	return o.Dirty, true
}

// HasDirty returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasDirty() bool {
	if o != nil && o.Dirty != nil {
		return true
	}

	return false
}

// SetDirty gets a reference to the given bool and assigns it to the Dirty field.
func (o *BTMetadataCommonString) SetDirty(v bool) {
	o.Dirty = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetEditable() bool {
	if o == nil || o.Editable == nil {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetEditableOk() (*bool, bool) {
	if o == nil || o.Editable == nil {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasEditable() bool {
	if o != nil && o.Editable != nil {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *BTMetadataCommonString) SetEditable(v bool) {
	o.Editable = &v
}

// GetEditableInUi returns the EditableInUi field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetEditableInUi() bool {
	if o == nil || o.EditableInUi == nil {
		var ret bool
		return ret
	}
	return *o.EditableInUi
}

// GetEditableInUiOk returns a tuple with the EditableInUi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetEditableInUiOk() (*bool, bool) {
	if o == nil || o.EditableInUi == nil {
		return nil, false
	}
	return o.EditableInUi, true
}

// HasEditableInUi returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasEditableInUi() bool {
	if o != nil && o.EditableInUi != nil {
		return true
	}

	return false
}

// SetEditableInUi gets a reference to the given bool and assigns it to the EditableInUi field.
func (o *BTMetadataCommonString) SetEditableInUi(v bool) {
	o.EditableInUi = &v
}

// GetInitialValue returns the InitialValue field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetInitialValue() map[string]interface{} {
	if o == nil || o.InitialValue == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.InitialValue
}

// GetInitialValueOk returns a tuple with the InitialValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetInitialValueOk() (*map[string]interface{}, bool) {
	if o == nil || o.InitialValue == nil {
		return nil, false
	}
	return o.InitialValue, true
}

// HasInitialValue returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasInitialValue() bool {
	if o != nil && o.InitialValue != nil {
		return true
	}

	return false
}

// SetInitialValue gets a reference to the given map[string]interface{} and assigns it to the InitialValue field.
func (o *BTMetadataCommonString) SetInitialValue(v map[string]interface{}) {
	o.InitialValue = &v
}

// GetIsApproverProperty returns the IsApproverProperty field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetIsApproverProperty() bool {
	if o == nil || o.IsApproverProperty == nil {
		var ret bool
		return ret
	}
	return *o.IsApproverProperty
}

// GetIsApproverPropertyOk returns a tuple with the IsApproverProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetIsApproverPropertyOk() (*bool, bool) {
	if o == nil || o.IsApproverProperty == nil {
		return nil, false
	}
	return o.IsApproverProperty, true
}

// HasIsApproverProperty returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasIsApproverProperty() bool {
	if o != nil && o.IsApproverProperty != nil {
		return true
	}

	return false
}

// SetIsApproverProperty gets a reference to the given bool and assigns it to the IsApproverProperty field.
func (o *BTMetadataCommonString) SetIsApproverProperty(v bool) {
	o.IsApproverProperty = &v
}

// GetIsNotifierProperty returns the IsNotifierProperty field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetIsNotifierProperty() bool {
	if o == nil || o.IsNotifierProperty == nil {
		var ret bool
		return ret
	}
	return *o.IsNotifierProperty
}

// GetIsNotifierPropertyOk returns a tuple with the IsNotifierProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetIsNotifierPropertyOk() (*bool, bool) {
	if o == nil || o.IsNotifierProperty == nil {
		return nil, false
	}
	return o.IsNotifierProperty, true
}

// HasIsNotifierProperty returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasIsNotifierProperty() bool {
	if o != nil && o.IsNotifierProperty != nil {
		return true
	}

	return false
}

// SetIsNotifierProperty gets a reference to the given bool and assigns it to the IsNotifierProperty field.
func (o *BTMetadataCommonString) SetIsNotifierProperty(v bool) {
	o.IsNotifierProperty = &v
}

// GetMultivalued returns the Multivalued field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetMultivalued() bool {
	if o == nil || o.Multivalued == nil {
		var ret bool
		return ret
	}
	return *o.Multivalued
}

// GetMultivaluedOk returns a tuple with the Multivalued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetMultivaluedOk() (*bool, bool) {
	if o == nil || o.Multivalued == nil {
		return nil, false
	}
	return o.Multivalued, true
}

// HasMultivalued returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasMultivalued() bool {
	if o != nil && o.Multivalued != nil {
		return true
	}

	return false
}

// SetMultivalued gets a reference to the given bool and assigns it to the Multivalued field.
func (o *BTMetadataCommonString) SetMultivalued(v bool) {
	o.Multivalued = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTMetadataCommonString) SetName(v string) {
	o.Name = &v
}

// GetPropertyId returns the PropertyId field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetPropertyId() string {
	if o == nil || o.PropertyId == nil {
		var ret string
		return ret
	}
	return *o.PropertyId
}

// GetPropertyIdOk returns a tuple with the PropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetPropertyIdOk() (*string, bool) {
	if o == nil || o.PropertyId == nil {
		return nil, false
	}
	return o.PropertyId, true
}

// HasPropertyId returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasPropertyId() bool {
	if o != nil && o.PropertyId != nil {
		return true
	}

	return false
}

// SetPropertyId gets a reference to the given string and assigns it to the PropertyId field.
func (o *BTMetadataCommonString) SetPropertyId(v string) {
	o.PropertyId = &v
}

// GetPropertySource returns the PropertySource field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetPropertySource() int32 {
	if o == nil || o.PropertySource == nil {
		var ret int32
		return ret
	}
	return *o.PropertySource
}

// GetPropertySourceOk returns a tuple with the PropertySource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetPropertySourceOk() (*int32, bool) {
	if o == nil || o.PropertySource == nil {
		return nil, false
	}
	return o.PropertySource, true
}

// HasPropertySource returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasPropertySource() bool {
	if o != nil && o.PropertySource != nil {
		return true
	}

	return false
}

// SetPropertySource gets a reference to the given int32 and assigns it to the PropertySource field.
func (o *BTMetadataCommonString) SetPropertySource(v int32) {
	o.PropertySource = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetRequired() bool {
	if o == nil || o.Required == nil {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetRequiredOk() (*bool, bool) {
	if o == nil || o.Required == nil {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasRequired() bool {
	if o != nil && o.Required != nil {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *BTMetadataCommonString) SetRequired(v bool) {
	o.Required = &v
}

// GetSchemaId returns the SchemaId field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetSchemaId() string {
	if o == nil || o.SchemaId == nil {
		var ret string
		return ret
	}
	return *o.SchemaId
}

// GetSchemaIdOk returns a tuple with the SchemaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetSchemaIdOk() (*string, bool) {
	if o == nil || o.SchemaId == nil {
		return nil, false
	}
	return o.SchemaId, true
}

// HasSchemaId returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasSchemaId() bool {
	if o != nil && o.SchemaId != nil {
		return true
	}

	return false
}

// SetSchemaId gets a reference to the given string and assigns it to the SchemaId field.
func (o *BTMetadataCommonString) SetSchemaId(v string) {
	o.SchemaId = &v
}

// GetUiHints returns the UiHints field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetUiHints() BTMetadataPropertyUiHintsInfo {
	if o == nil || o.UiHints == nil {
		var ret BTMetadataPropertyUiHintsInfo
		return ret
	}
	return *o.UiHints
}

// GetUiHintsOk returns a tuple with the UiHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetUiHintsOk() (*BTMetadataPropertyUiHintsInfo, bool) {
	if o == nil || o.UiHints == nil {
		return nil, false
	}
	return o.UiHints, true
}

// HasUiHints returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasUiHints() bool {
	if o != nil && o.UiHints != nil {
		return true
	}

	return false
}

// SetUiHints gets a reference to the given BTMetadataPropertyUiHintsInfo and assigns it to the UiHints field.
func (o *BTMetadataCommonString) SetUiHints(v BTMetadataPropertyUiHintsInfo) {
	o.UiHints = &v
}

// GetValidator returns the Validator field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetValidator() BTMetadataPropertyValidatorInfo {
	if o == nil || o.Validator == nil {
		var ret BTMetadataPropertyValidatorInfo
		return ret
	}
	return *o.Validator
}

// GetValidatorOk returns a tuple with the Validator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetValidatorOk() (*BTMetadataPropertyValidatorInfo, bool) {
	if o == nil || o.Validator == nil {
		return nil, false
	}
	return o.Validator, true
}

// HasValidator returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasValidator() bool {
	if o != nil && o.Validator != nil {
		return true
	}

	return false
}

// SetValidator gets a reference to the given BTMetadataPropertyValidatorInfo and assigns it to the Validator field.
func (o *BTMetadataCommonString) SetValidator(v BTMetadataPropertyValidatorInfo) {
	o.Validator = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BTMetadataCommonString) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *BTMetadataCommonString) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *BTMetadataCommonString) SetValue(v string) {
	o.Value = &v
}

// GetValueType returns the ValueType field value
func (o *BTMetadataCommonString) GetValueType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *BTMetadataCommonString) GetValueTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *BTMetadataCommonString) SetValueType(v string) {
	o.ValueType = v
}

func (o BTMetadataCommonString) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultValue != nil {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if o.Dirty != nil {
		toSerialize["dirty"] = o.Dirty
	}
	if o.Editable != nil {
		toSerialize["editable"] = o.Editable
	}
	if o.EditableInUi != nil {
		toSerialize["editableInUi"] = o.EditableInUi
	}
	if o.InitialValue != nil {
		toSerialize["initialValue"] = o.InitialValue
	}
	if o.IsApproverProperty != nil {
		toSerialize["isApproverProperty"] = o.IsApproverProperty
	}
	if o.IsNotifierProperty != nil {
		toSerialize["isNotifierProperty"] = o.IsNotifierProperty
	}
	if o.Multivalued != nil {
		toSerialize["multivalued"] = o.Multivalued
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PropertyId != nil {
		toSerialize["propertyId"] = o.PropertyId
	}
	if o.PropertySource != nil {
		toSerialize["propertySource"] = o.PropertySource
	}
	if o.Required != nil {
		toSerialize["required"] = o.Required
	}
	if o.SchemaId != nil {
		toSerialize["schemaId"] = o.SchemaId
	}
	if o.UiHints != nil {
		toSerialize["uiHints"] = o.UiHints
	}
	if o.Validator != nil {
		toSerialize["validator"] = o.Validator
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["valueType"] = o.ValueType
	}
	return json.Marshal(toSerialize)
}

// AsBTMetadataItemsProperties wraps this instance of BTMetadataCommonString in BTMetadataItemsProperties
func (s *BTMetadataCommonString) AsBTMetadataItemsProperties() BTMetadataItemsProperties {
	return BTMetadataItemsProperties{ BTMetadataItemsPropertiesInterface: s }
}
// AsBTMetadataPropertyInfo wraps this instance of BTMetadataCommonString in BTMetadataPropertyInfo
func (s *BTMetadataCommonString) AsBTMetadataPropertyInfo() BTMetadataPropertyInfo {
	return BTMetadataPropertyInfo{ BTMetadataPropertyInfoInterface: s }
}
// AsBTWorkflowPropertyInfo wraps this instance of BTMetadataCommonString in BTWorkflowPropertyInfo
func (s *BTMetadataCommonString) AsBTWorkflowPropertyInfo() BTWorkflowPropertyInfo {
	return BTWorkflowPropertyInfo{ BTWorkflowPropertyInfoInterface: s }
}
type NullableBTMetadataCommonString struct {
	value *BTMetadataCommonString
	isSet bool
}

func (v NullableBTMetadataCommonString) Get() *BTMetadataCommonString {
	return v.value
}

func (v *NullableBTMetadataCommonString) Set(val *BTMetadataCommonString) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMetadataCommonString) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMetadataCommonString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMetadataCommonString(val *BTMetadataCommonString) *NullableBTMetadataCommonString {
	return &NullableBTMetadataCommonString{value: val, isSet: true}
}

func (v NullableBTMetadataCommonString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMetadataCommonString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
