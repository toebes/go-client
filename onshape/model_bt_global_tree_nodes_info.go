/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTGlobalTreeNodesInfo struct for BTGlobalTreeNodesInfo
type BTGlobalTreeNodesInfo struct {
	PermissionSet *[]string `json:"permissionSet,omitempty"`
	PathToRoot *[]BTGlobalTreeNodeInfo `json:"pathToRoot,omitempty"`
	Next *string `json:"next,omitempty"`
	Href *string `json:"href,omitempty"`
	Items *[]BTGlobalTreeMagicNodeInfo `json:"items,omitempty"`
}

// NewBTGlobalTreeNodesInfo instantiates a new BTGlobalTreeNodesInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTGlobalTreeNodesInfo() *BTGlobalTreeNodesInfo {
	this := BTGlobalTreeNodesInfo{}
	return &this
}

// NewBTGlobalTreeNodesInfoWithDefaults instantiates a new BTGlobalTreeNodesInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTGlobalTreeNodesInfoWithDefaults() *BTGlobalTreeNodesInfo {
	this := BTGlobalTreeNodesInfo{}
	return &this
}

// GetPermissionSet returns the PermissionSet field value if set, zero value otherwise.
func (o *BTGlobalTreeNodesInfo) GetPermissionSet() []string {
	if o == nil || o.PermissionSet == nil {
		var ret []string
		return ret
	}
	return *o.PermissionSet
}

// GetPermissionSetOk returns a tuple with the PermissionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodesInfo) GetPermissionSetOk() (*[]string, bool) {
	if o == nil || o.PermissionSet == nil {
		return nil, false
	}
	return o.PermissionSet, true
}

// HasPermissionSet returns a boolean if a field has been set.
func (o *BTGlobalTreeNodesInfo) HasPermissionSet() bool {
	if o != nil && o.PermissionSet != nil {
		return true
	}

	return false
}

// SetPermissionSet gets a reference to the given []string and assigns it to the PermissionSet field.
func (o *BTGlobalTreeNodesInfo) SetPermissionSet(v []string) {
	o.PermissionSet = &v
}

// GetPathToRoot returns the PathToRoot field value if set, zero value otherwise.
func (o *BTGlobalTreeNodesInfo) GetPathToRoot() []BTGlobalTreeNodeInfo {
	if o == nil || o.PathToRoot == nil {
		var ret []BTGlobalTreeNodeInfo
		return ret
	}
	return *o.PathToRoot
}

// GetPathToRootOk returns a tuple with the PathToRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodesInfo) GetPathToRootOk() (*[]BTGlobalTreeNodeInfo, bool) {
	if o == nil || o.PathToRoot == nil {
		return nil, false
	}
	return o.PathToRoot, true
}

// HasPathToRoot returns a boolean if a field has been set.
func (o *BTGlobalTreeNodesInfo) HasPathToRoot() bool {
	if o != nil && o.PathToRoot != nil {
		return true
	}

	return false
}

// SetPathToRoot gets a reference to the given []BTGlobalTreeNodeInfo and assigns it to the PathToRoot field.
func (o *BTGlobalTreeNodesInfo) SetPathToRoot(v []BTGlobalTreeNodeInfo) {
	o.PathToRoot = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *BTGlobalTreeNodesInfo) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodesInfo) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *BTGlobalTreeNodesInfo) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *BTGlobalTreeNodesInfo) SetNext(v string) {
	o.Next = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTGlobalTreeNodesInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodesInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTGlobalTreeNodesInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTGlobalTreeNodesInfo) SetHref(v string) {
	o.Href = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BTGlobalTreeNodesInfo) GetItems() []BTGlobalTreeMagicNodeInfo {
	if o == nil || o.Items == nil {
		var ret []BTGlobalTreeMagicNodeInfo
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeNodesInfo) GetItemsOk() (*[]BTGlobalTreeMagicNodeInfo, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BTGlobalTreeNodesInfo) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BTGlobalTreeMagicNodeInfo and assigns it to the Items field.
func (o *BTGlobalTreeNodesInfo) SetItems(v []BTGlobalTreeMagicNodeInfo) {
	o.Items = &v
}

func (o BTGlobalTreeNodesInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PermissionSet != nil {
		toSerialize["permissionSet"] = o.PermissionSet
	}
	if o.PathToRoot != nil {
		toSerialize["pathToRoot"] = o.PathToRoot
	}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableBTGlobalTreeNodesInfo struct {
	value *BTGlobalTreeNodesInfo
	isSet bool
}

func (v NullableBTGlobalTreeNodesInfo) Get() *BTGlobalTreeNodesInfo {
	return v.value
}

func (v *NullableBTGlobalTreeNodesInfo) Set(val *BTGlobalTreeNodesInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTGlobalTreeNodesInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTGlobalTreeNodesInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTGlobalTreeNodesInfo(val *BTGlobalTreeNodesInfo) *NullableBTGlobalTreeNodesInfo {
	return &NullableBTGlobalTreeNodesInfo{value: val, isSet: true}
}

func (v NullableBTGlobalTreeNodesInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTGlobalTreeNodesInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
