/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMetadataCategoryIDs Category IDs returned as a metadata value
type BTMetadataCategoryIDs struct {
	// TODO: Not sure the type of this.
	MemberCategoryIds *map[string]interface{} `json:"memberCategoryIds,omitempty"`
	// TODO: Not sure the type of this.
	MemberCategories *map[string]interface{} `json:"memberCategories,omitempty"`
	Description *string `json:"description,omitempty"`
	OwnerType *int32 `json:"ownerType,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	PublishState *int32 `json:"publishState,omitempty"`
	ObjectTypes *[]int32 `json:"objectTypes,omitempty"`
	DefaultObjectType *int32 `json:"defaultObjectType,omitempty"`
	Name *string `json:"name,omitempty"`
	Id *string `json:"id,omitempty"`
	Href *string `json:"href,omitempty"`
}

// NewBTMetadataCategoryIDs instantiates a new BTMetadataCategoryIDs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMetadataCategoryIDs() *BTMetadataCategoryIDs {
	this := BTMetadataCategoryIDs{}
	return &this
}

// NewBTMetadataCategoryIDsWithDefaults instantiates a new BTMetadataCategoryIDs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMetadataCategoryIDsWithDefaults() *BTMetadataCategoryIDs {
	this := BTMetadataCategoryIDs{}
	return &this
}

// GetMemberCategoryIds returns the MemberCategoryIds field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetMemberCategoryIds() map[string]interface{} {
	if o == nil || o.MemberCategoryIds == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.MemberCategoryIds
}

// GetMemberCategoryIdsOk returns a tuple with the MemberCategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetMemberCategoryIdsOk() (*map[string]interface{}, bool) {
	if o == nil || o.MemberCategoryIds == nil {
		return nil, false
	}
	return o.MemberCategoryIds, true
}

// HasMemberCategoryIds returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasMemberCategoryIds() bool {
	if o != nil && o.MemberCategoryIds != nil {
		return true
	}

	return false
}

// SetMemberCategoryIds gets a reference to the given map[string]interface{} and assigns it to the MemberCategoryIds field.
func (o *BTMetadataCategoryIDs) SetMemberCategoryIds(v map[string]interface{}) {
	o.MemberCategoryIds = &v
}

// GetMemberCategories returns the MemberCategories field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetMemberCategories() map[string]interface{} {
	if o == nil || o.MemberCategories == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.MemberCategories
}

// GetMemberCategoriesOk returns a tuple with the MemberCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetMemberCategoriesOk() (*map[string]interface{}, bool) {
	if o == nil || o.MemberCategories == nil {
		return nil, false
	}
	return o.MemberCategories, true
}

// HasMemberCategories returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasMemberCategories() bool {
	if o != nil && o.MemberCategories != nil {
		return true
	}

	return false
}

// SetMemberCategories gets a reference to the given map[string]interface{} and assigns it to the MemberCategories field.
func (o *BTMetadataCategoryIDs) SetMemberCategories(v map[string]interface{}) {
	o.MemberCategories = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTMetadataCategoryIDs) SetDescription(v string) {
	o.Description = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetOwnerType() int32 {
	if o == nil || o.OwnerType == nil {
		var ret int32
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetOwnerTypeOk() (*int32, bool) {
	if o == nil || o.OwnerType == nil {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasOwnerType() bool {
	if o != nil && o.OwnerType != nil {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given int32 and assigns it to the OwnerType field.
func (o *BTMetadataCategoryIDs) SetOwnerType(v int32) {
	o.OwnerType = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *BTMetadataCategoryIDs) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetPublishState returns the PublishState field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetPublishState() int32 {
	if o == nil || o.PublishState == nil {
		var ret int32
		return ret
	}
	return *o.PublishState
}

// GetPublishStateOk returns a tuple with the PublishState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetPublishStateOk() (*int32, bool) {
	if o == nil || o.PublishState == nil {
		return nil, false
	}
	return o.PublishState, true
}

// HasPublishState returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasPublishState() bool {
	if o != nil && o.PublishState != nil {
		return true
	}

	return false
}

// SetPublishState gets a reference to the given int32 and assigns it to the PublishState field.
func (o *BTMetadataCategoryIDs) SetPublishState(v int32) {
	o.PublishState = &v
}

// GetObjectTypes returns the ObjectTypes field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetObjectTypes() []int32 {
	if o == nil || o.ObjectTypes == nil {
		var ret []int32
		return ret
	}
	return *o.ObjectTypes
}

// GetObjectTypesOk returns a tuple with the ObjectTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetObjectTypesOk() (*[]int32, bool) {
	if o == nil || o.ObjectTypes == nil {
		return nil, false
	}
	return o.ObjectTypes, true
}

// HasObjectTypes returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasObjectTypes() bool {
	if o != nil && o.ObjectTypes != nil {
		return true
	}

	return false
}

// SetObjectTypes gets a reference to the given []int32 and assigns it to the ObjectTypes field.
func (o *BTMetadataCategoryIDs) SetObjectTypes(v []int32) {
	o.ObjectTypes = &v
}

// GetDefaultObjectType returns the DefaultObjectType field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetDefaultObjectType() int32 {
	if o == nil || o.DefaultObjectType == nil {
		var ret int32
		return ret
	}
	return *o.DefaultObjectType
}

// GetDefaultObjectTypeOk returns a tuple with the DefaultObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetDefaultObjectTypeOk() (*int32, bool) {
	if o == nil || o.DefaultObjectType == nil {
		return nil, false
	}
	return o.DefaultObjectType, true
}

// HasDefaultObjectType returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasDefaultObjectType() bool {
	if o != nil && o.DefaultObjectType != nil {
		return true
	}

	return false
}

// SetDefaultObjectType gets a reference to the given int32 and assigns it to the DefaultObjectType field.
func (o *BTMetadataCategoryIDs) SetDefaultObjectType(v int32) {
	o.DefaultObjectType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTMetadataCategoryIDs) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTMetadataCategoryIDs) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTMetadataCategoryIDs) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataCategoryIDs) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTMetadataCategoryIDs) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTMetadataCategoryIDs) SetHref(v string) {
	o.Href = &v
}

func (o BTMetadataCategoryIDs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MemberCategoryIds != nil {
		toSerialize["memberCategoryIds"] = o.MemberCategoryIds
	}
	if o.MemberCategories != nil {
		toSerialize["memberCategories"] = o.MemberCategories
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.OwnerType != nil {
		toSerialize["ownerType"] = o.OwnerType
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.PublishState != nil {
		toSerialize["publishState"] = o.PublishState
	}
	if o.ObjectTypes != nil {
		toSerialize["objectTypes"] = o.ObjectTypes
	}
	if o.DefaultObjectType != nil {
		toSerialize["defaultObjectType"] = o.DefaultObjectType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	return json.Marshal(toSerialize)
}

type NullableBTMetadataCategoryIDs struct {
	value *BTMetadataCategoryIDs
	isSet bool
}

func (v NullableBTMetadataCategoryIDs) Get() *BTMetadataCategoryIDs {
	return v.value
}

func (v *NullableBTMetadataCategoryIDs) Set(val *BTMetadataCategoryIDs) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMetadataCategoryIDs) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMetadataCategoryIDs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMetadataCategoryIDs(val *BTMetadataCategoryIDs) *NullableBTMetadataCategoryIDs {
	return &NullableBTMetadataCategoryIDs{value: val, isSet: true}
}

func (v NullableBTMetadataCategoryIDs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMetadataCategoryIDs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
