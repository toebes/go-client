/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMetadataParts Array of parts in a part studio
type BTMetadataParts struct {
	Next *string `json:"next,omitempty"`
	Prev *string `json:"prev,omitempty"`
	Href *string `json:"href,omitempty"`
	Items *[]BTMetadataPartsItems `json:"items,omitempty"`
}

// NewBTMetadataParts instantiates a new BTMetadataParts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMetadataParts() *BTMetadataParts {
	this := BTMetadataParts{}
	return &this
}

// NewBTMetadataPartsWithDefaults instantiates a new BTMetadataParts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMetadataPartsWithDefaults() *BTMetadataParts {
	this := BTMetadataParts{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *BTMetadataParts) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataParts) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *BTMetadataParts) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *BTMetadataParts) SetNext(v string) {
	o.Next = &v
}

// GetPrev returns the Prev field value if set, zero value otherwise.
func (o *BTMetadataParts) GetPrev() string {
	if o == nil || o.Prev == nil {
		var ret string
		return ret
	}
	return *o.Prev
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataParts) GetPrevOk() (*string, bool) {
	if o == nil || o.Prev == nil {
		return nil, false
	}
	return o.Prev, true
}

// HasPrev returns a boolean if a field has been set.
func (o *BTMetadataParts) HasPrev() bool {
	if o != nil && o.Prev != nil {
		return true
	}

	return false
}

// SetPrev gets a reference to the given string and assigns it to the Prev field.
func (o *BTMetadataParts) SetPrev(v string) {
	o.Prev = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTMetadataParts) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataParts) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTMetadataParts) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTMetadataParts) SetHref(v string) {
	o.Href = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BTMetadataParts) GetItems() []BTMetadataPartsItems {
	if o == nil || o.Items == nil {
		var ret []BTMetadataPartsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataParts) GetItemsOk() (*[]BTMetadataPartsItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BTMetadataParts) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BTMetadataPartsItems and assigns it to the Items field.
func (o *BTMetadataParts) SetItems(v []BTMetadataPartsItems) {
	o.Items = &v
}

func (o BTMetadataParts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Next != nil {
		toSerialize["next"] = o.Next
	}
	if o.Prev != nil {
		toSerialize["prev"] = o.Prev
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableBTMetadataParts struct {
	value *BTMetadataParts
	isSet bool
}

func (v NullableBTMetadataParts) Get() *BTMetadataParts {
	return v.value
}

func (v *NullableBTMetadataParts) Set(val *BTMetadataParts) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMetadataParts) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMetadataParts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMetadataParts(val *BTMetadataParts) *NullableBTMetadataParts {
	return &NullableBTMetadataParts{value: val, isSet: true}
}

func (v NullableBTMetadataParts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMetadataParts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
